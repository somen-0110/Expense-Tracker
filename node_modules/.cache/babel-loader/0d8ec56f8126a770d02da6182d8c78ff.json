{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\somen\\\\Desktop\\\\Development\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpensesFilter\"; // import NewExpense from \"../NewExpense/NewExpense\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  let DUMMY_YEAR = 2020;\n  const [filteredYear, setFilteredYear] = useState(DUMMY_YEAR);\n\n  const filterChangeFilter = value => {\n    setFilteredYear(value);\n  };\n\n  const filteredData = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No expenses found !!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 24\n  }, this);\n\n  if (filteredData.length > 0) {\n    expenseContent = filteredData.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      onChangeFilter: filterChangeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), expenseContent]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"l6jLr75jsuAfsje0ErPRnSXTQ10=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/Users/somen/Desktop/Development/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","DUMMY_YEAR","filteredYear","setFilteredYear","filterChangeFilter","value","filteredData","items","filter","expense","date","getFullYear","toString","expenseContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kBAA3B,C,CACA;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,MAAIC,UAAU,GAAG,IAAjB;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAACM,UAAD,CAAhD;;AACA,QAAMG,kBAAkB,GAAIC,KAAD,IAAW;AACpCF,IAAAA,eAAe,CAACE,KAAD,CAAf;AACD,GAFD;;AAGA,QAAMC,YAAY,GAAGN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAoBC,OAAD,IAAa;AACnD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CV,YAAjD;AACD,GAFoB,CAArB;;AAGA,MAAIW,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AACA,MAAIP,YAAY,CAACQ,MAAb,GAAsB,CAA1B,EAA6B;AAC3BD,IAAAA,cAAc,GAAGP,YAAY,CAACS,GAAb,CAAkBN,OAAD,iBAChC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACO,KAFjB;AAGE,MAAA,MAAM,EAAEP,OAAO,CAACQ,MAHlB;AAIE,MAAA,IAAI,EAAER,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACS,EADf;AAAA;AAAA;AAAA;AAAA,YADe,CAAjB;AAQD;;AACD,sBACE,QAAC,IAAD;AAAM,IAAA,SAAS,EAAC,UAAhB;AAAA,4BACE,QAAC,cAAD;AAAgB,MAAA,cAAc,EAAEd;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,EAEGS,cAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA1BD;;GAAMd,Q;;KAAAA,Q;AA4BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\n// import NewExpense from \"../NewExpense/NewExpense\";\r\n\r\nconst Expenses = (props) => {\r\n  let DUMMY_YEAR = 2020;\r\n  const [filteredYear, setFilteredYear] = useState(DUMMY_YEAR);\r\n  const filterChangeFilter = (value) => {\r\n    setFilteredYear(value);\r\n  };\r\n  const filteredData = props.items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === filteredYear;\r\n  });\r\n  let expenseContent = <p>No expenses found !!</p>;\r\n  if (filteredData.length > 0) {\r\n    expenseContent = filteredData.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n      />\r\n    ));\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpensesFilter onChangeFilter={filterChangeFilter} />\r\n      {expenseContent}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}